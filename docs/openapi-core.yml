openapi: 3.1.0
info:
    title: Java API MVC With Postgres - Core Criteria
    description: Core API for Java API MVC with Postgres Exercise
    version: 0.2.3
    contact:
        name: MVC with Postgres Exercise

servers:
    - url: http://localhost:4000
tags:
    - name: employees
paths:
    /employees:
        post:
            tags:
                - employees
            summary: Create a new employee
            description: Add a new employee to our list of available employees
            operationId: createEmployee
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEmployee'
            responses:
                '201':
                    description: Successfully created a new Employee
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Employee'
        get:
            tags:
                - employees
            summary: Get all employees
            description: Get all of the employees from our list
            operationId: getEmployees
            responses:
                '200':
                    description: Get a list of all employees
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AllEmployees'
    /employees/{id}:
        get:
            tags:
                - employees
            summary: Get an employee
            description: Get an employee by ID
            operationId: getSpecificEmployee
            parameters:
                - name: id
                  in: path
                  description: The ID of the employee to get
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: Successfully returned the specified employee
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Employee'
        put:
            tags:
                - employees
            summary: Update an employee
            description: Update an existing employee by ID
            operationId: updateEmployee
            parameters:
                - name: id
                  in: path
                  description: The ID of the employee to update
                  required: true
                  schema:
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEmployee'
            responses:
                '201':
                    description: Successfully updated the specified employee
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Employee'
        delete:
            tags:
                - employees
            summary: Delete an employee
            description: Remove an employee from our list of employees
            operationId: deleteEmployee
            parameters:
                - name: id
                  in: path
                  description: The ID of the employee to delete
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: Successfully deleted the specified employee
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Employee'

components:
    schemas:
        CreateEmployee:
            type: object
            required: [name, job, salaryGrade, department]
            properties:
                name:
                    type: string
                    example: "Dave Ames"
                job:
                    type: string
                    example: "Java Developer"
                salaryGrade:
                    type: string
                    example: "8"
                department:
                    type: string
                    example: "Software Development"
        Employee:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                name:
                    type: string
                    example: "Dave Ames"
                jobName:
                    type: string
                    example: "Java Developer"
                salaryGrade:
                    type: string
                    example: "8"
                department:
                    type: string
                    example: "Software Development"
        AllEmployees:
            type: array
            items:
                $ref: '#/components/schemas/Employee'
